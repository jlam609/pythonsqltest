{
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  },
  "orig_nbformat": 2,
  "kernelspec": {
   "name": "python383jvsc74a57bd0dca0ade3e726a953b501b15e8e990130d2b7799f14cfd9f4271676035ebe5511",
   "display_name": "Python 3.8.3 64-bit ('base': conda)"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2,
 "cells": [
  {
   "source": [
    "import praw\n",
    "import pandas as pd\n",
    "import os"
   ],
   "cell_type": "code",
   "metadata": {},
   "execution_count": 1,
   "outputs": []
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "redditsecret = os.environ.get('redditsecret')\n",
    "redditclient = os.environ.get('redditclient')\n",
    "reddituser = os.environ.get('reddituser')\n",
    "redditpassword = os.environ.get('redditpassword')\n",
    "useragent = os.environ.get('useragent')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "reddit = praw.Reddit(client_id = redditclient,\n",
    "                     client_secret = redditsecret,\n",
    "                     user_agent = useragent,\n",
    "                     username = reddituser,\n",
    "                     password = redditpassword)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "output_type": "stream",
     "name": "stdout",
     "text": [
      "darkphoenix609\n"
     ]
    }
   ],
   "source": [
    "print(reddit.user.me())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "sub = ['wallstreetbets', 'stocks']\n",
    "for s in sub:\n",
    "    subreddit = reddit.subreddit(s)\n",
    "    query = ['Stocks']\n",
    "    for item in query: \n",
    "        post_dict = {\n",
    "            'title': [],\n",
    "            'score': [],\n",
    "            'id': [],\n",
    "            'url':[],\n",
    "            'created':[],\n",
    "            'author': []\n",
    "        }\n",
    "        comments_dict = {\n",
    "            'comment_id':[],\n",
    "            'comment_parent_id':[],\n",
    "            'comment_body':[],\n",
    "            'comment_link_id':[]\n",
    "        }\n",
    "        for submission in subreddit.search(query, sort='top', limit=3):\n",
    "            post_dict['title'].append(submission.title)\n",
    "            post_dict['score'].append(submission.score)\n",
    "            post_dict['id'].append(submission.id)\n",
    "            post_dict['url'].append(submission.url)\n",
    "            post_dict['created'].append(submission.created)\n",
    "            post_dict['author'].append(submission.author)\n",
    "\n",
    "            submission.comments.replace_more(limit=5)\n",
    "            for comment in submission.comments.list():\n",
    "                comments_dict['comment_id'].append(comment.id)\n",
    "                comments_dict['comment_parent_id'].append(comment.parent_id)\n",
    "                comments_dict['comment_body'].append(comment.body)\n",
    "                comments_dict['comment_link_id'].append(comment.link_id)\n",
    "    post_comments = pd.DataFrame(comments_dict)\n",
    "    post_comments.to_csv(s +\"_comments.csv\")\n",
    "    post_data = pd.DataFrame(post_dict)\n",
    "    post_data.to_csv(s+ \"_item.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ]
}